import os
import asyncio
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from telethon.sync import TelegramClient

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.environ.get("BOT_TOKEN")
USER_ID = int(os.environ.get("USER_ID"))
APP_API_ID = int(os.environ.get("APP_API_ID"))
APP_API_HASH = os.environ.get("APP_API_HASH")

# TelegramClient –¥–ª—è Telethon
client = TelegramClient('anon', APP_API_ID, APP_API_HASH)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –Ø –∫—Ä–∏–ø—Ç–æ-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ù–∞–ø–∏—à–∏ –∏–º—è –º–æ–Ω–µ—Ç—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: solana")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text.lower()
    await update.message.reply_text(f"üîç –°–∫–∞–Ω–∏—Ä—É—é Telegram –ø–æ –∑–∞–ø—Ä–æ—Å—É: {user_input}")

    try:
        await client.start()
        dialogs = await client.get_dialogs()
        count = len(dialogs)
        await update.message.reply_text(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {count} –¥–∏–∞–ª–æ–≥–æ–≤. (–≠–º—É–ª—è—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞)")
    except Exception as e:
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Telegram: {e}")
    finally:
        await client.disconnect()

if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
